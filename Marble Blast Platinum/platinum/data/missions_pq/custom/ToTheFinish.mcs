//--- INFO BEGIN ---
//Mission information for the level select. Generated from the MissionInfo object except with extra goodies.
function PQ_ToTheFinish_GetMissionInfo() {
	return
new ScriptObject() {
		name = "To the Finish!";
		type = "Custom";
		level = "2";
		desc = "Jump the gaps and ride the platforms to victory.";
		artist = "Matan";
		music = "Upbeat Freedom.ogg";
		game = "PlatinumQuest";
		time = "45000";
		platinumTime = "15000";
		ultimateTime = "9000";
		awesomeTime = "4510";
		generalHint = "This level was Training Wheels before Training Wheels existed. It\'s a bit jarring that this was supposed to be in the Tutorial section...";
		ultimateHint = "You don\'t even need to worry about difficulty here- just grab the first Time Modifier and either elevator will get you to the finish in time.";
		awesomeHint = "At first it looks impossible, but you can edge hit all the way to the platform next to the finish!";
		customRadarRule = $Radar::Flags::EndPad;
		alarmStartTime = "15";
		easterEgg = "0";
		gems = "0";
		interior0 = $usermods @ "/data/interiors_pq/custom/ToTheFinish.dif";
		interiors = "1";
		maxScore = "0";
		requirements = "Finish Training Wheels.";
		unlockFunc = "unlock_ToTheFinish";
};
}
//--- INFO END ---

//Don't continue loading if this just wants the mission info
if ($loadingMissionInfo) return;
//--- CLIENT SCRIPTS BEGIN ---
//Put any scripts that will be loaded on all clients (in MP / SP) here.
// Note: these will be loaded by dedicated servers too, so be sure to test for
// $Server::Dedicated before creating any GUI.

//--- CLIENT SCRIPTS END ---
//Don't continue loading if this is a client (non-server)
if (!$Server::Hosting || $Server::_Dedicated) return;
//--- SERVER PREMISSION SCRIPTS BEGIN ---
//DO NOT DELETE THIS LINE TotheFinish
//         startHelpText = "";
//         PlatinumBonus = "";
//         UltimateBonus = "";
//         Standardiser = "";
//         BaseScore = "";
//         BaseMultiplier = "";
//
//
// Holy shit huge...
//
//Welcome to PlatinumQuest!\nThis expansion-pack-esque addition to Marble Blast Platinum is completely different to what you are used to. As you can notice, //the whole level select screen is different (though some options are kept) and has new things in it. As you will progress through the Tutorial levels, you //will learn more about PlatinumQuest, its contents and how to progress in it.\nPlatinumQuest is designed to be much easier than Marble Blast Platinum and to //allow the average player complete a very high % of PlatinumQuest. If you have trouble beating expert levels in Marble Blast Platinum, here you will reach //and complete many experts since they are of lower difficulty. Our goal is fun and replayability, and we hope you will enjoy PlatinumQuest as much as we did //designing it.\nThis level uses the Normal No Gems mode, meaning just get to the finish in order to beat the level. Simple, and this is exactly what this //level is all about. Oh, and don't worry, you can't fall off the level here. Try and see for yourself.
//
//
//--- SERVER PREMISSION SCRIPTS END ---
//--- MISSION BEGIN ---
function PQ_ToTheFinish_LoadMission() {
	return
new SimGroup(MissionGroup) {

	new TSStatic() {
		position = "-25.5 2.25 -1.6";
		rotation = "1 0 0 0";
		scale = "15 0.25 12";
		shapeName = "~/data/shapes/colmesh.dts";
	};
	new MissionArea(MissionArea) {
		area = "-360 -648 720 1296";
		flightCeiling = "300";
		flightCeilingRange = "20";
			locked = "true";
	};
	new Sky(Sky) {
		position = "336 136 0";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		cloudHeightPer[0] = "0";
		cloudHeightPer[1] = "0";
		cloudHeightPer[2] = "0";
		cloudSpeed1 = "0.0001";
		cloudSpeed2 = "0.0002";
		cloudSpeed3 = "0.0003";
		visibleDistance = "500";
		useSkyTextures = "1";
		renderBottomTexture = "1";
		SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
		fogDistance = "300";
		fogColor = "0.600000 0.600000 0.600000 1.000000";
		fogVolume1 = "-1 7.45949e-31 1.3684e-38";
		fogVolume2 = "-1 1.07208e-14 8.756e-14";
		fogVolume3 = "-1 5.1012e-10 2.05098e-08";
		materialList = "~/data/skies_pq/Blender3/blender3.dml";
		windVelocity = "1 0 0";
		windEffectPrecipitation = "0";
		noRenderBans = "1";
		fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
		fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
		fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
	};
	new Sun() {
		direction = "0.638261 0.459006 -0.61801";
		color = "1.400000 1.200000 0.400000 1.000000";
		ambient = "0.300000 0.300000 0.400000 1.000000";
	};
	new SimGroup(PathNodeGroup) {

		new StaticShape(CameraPath1) {
			position = "19.34038 -16.75498 32.73677";
			rotation = "0.6702262 0.3467998 -0.6561455 76.51871";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath2";
				timeToNext = "3400";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath2) {
			position = "10.68449 -19.45346 26.68481";
			rotation = "0.7272145 0.2760813 -0.6284411 62.2725";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath3";
				timeToNext = "3000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath3) {
			position = "2.548879 -20.0681 22.33874";
			rotation = "0.8439162 0.1960199 -0.4993815 49.88852";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath4";
				timeToNext = "0";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath4) {
			position = "-3.98738 29.29897 18.98583";
			rotation = "0.05640514 -0.3321548 0.9415369 161.832";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath5";
				timeToNext = "2000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath5) {
			position = "5.513903 30.91281 18.98583";
			rotation = "-0.00565071 -0.2661031 0.963928 182.3452";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath6";
				timeToNext = "2600";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath6) {
			position = "17.58066 26.69919 18.98583";
			rotation = "-0.06753864 -0.212385 0.9748493 214.4472";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath7";
				timeToNext = "2000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath7) {
			position = "23.65638 19.83174 18.46253";
			rotation = "-0.09934308 -0.223919 0.9695315 226.5488";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath1";
				timeToNext = "0";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
	};
	new TSStatic() {
		position = "-35.75 -10.2 -1.6";
		rotation = "1 0 0 0";
		scale = "0.25 15 12";
		shapeName = "~/data/shapes/colmesh.dts";
	};
	new TSStatic() {
		position = "-10.25 17 -1.6";
		rotation = "1 0 0 0";
		scale = "0.25 15 12";
		shapeName = "~/data/shapes/colmesh.dts";
	};
	new TSStatic() {
		position = "22.25 -0.6 -1.4";
		rotation = "1 0 0 0";
		scale = "0.25 25 12";
		shapeName = "~/data/shapes/colmesh.dts";
	};
	new TSStatic() {
		position = "6 22.25 -1.4";
		rotation = "1 0 0 0";
		scale = "17 0.25 12";
		shapeName = "~/data/shapes/colmesh.dts";
	};
	new TSStatic() {
		position = "-4.6 0 21";
		rotation = "1 0 0 0";
		scale = "35 30 0.25";
		shapeName = "~/data/shapes/colmesh.dts";
	};
	new InteriorInstance() {
		position = "0 0 0";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		interiorFile = "~/data/interiors_pq/custom/ToTheFinish.dif";
		showTerrainInside = "0";
	};
	new StaticShape(StartPoint) {
		position = "-3 3 0.5";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		dataBlock = "StartPad_PQ";
	};
	new StaticShape(EndPoint) {
		position = "0.25 -3.5 15.5";
		rotation = "0 0 1 45.00001";
		scale = "1 1 1";
		dataBlock = "EndPad_PQ";
	};
	new Item() {
		position = "5 19 3.75";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		dataBlock = "TimeTravelItem_PQ";
		collideable = "0";
		static = "1";
		rotate = "1";
			timeBonus = "4000";
	};
	new Item() {
		position = "-20 -3.5 14";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		dataBlock = "TimeTravelItem_PQ";
		collideable = "0";
		static = "1";
		rotate = "1";
			timeBonus = "500";
	};
	new SimGroup(MustChange_g) {

		new Path() {

			new Marker() {
				position = "-1 -3.5 5.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "0";
				msToNext = "4000";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "-27.5 -3.5 12.5";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "1";
				msToNext = "1250";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "-27.5 -3.5 12.5";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "2";
				msToNext = "4000";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "-1 -3.5 5.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "3";
				msToNext = "1500";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "-1 -3.5 5.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "4";
				msToNext = "1";
				smoothingType = "Linear";
			};
		};
		new PathedInterior(MustChange) {
			position = "0 0 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "PathedDefault";
			interiorResource = $usermods @ "/data/interiors_pq/custom/ToTheFinish.dif";
			interiorIndex = "0";
			basePosition = "0 0 0";
			baseRotation = "1 0 0 0";
			baseScale = "1 1 1";
				initialScale = "1 1 1";
				initialTargetPosition = "-1";
				initialTransform = "0 0 0 1 0 0 0";
		};
	};
	new SimGroup(MustChange_g) {

		new Path() {

			new Marker() {
				position = "0.25 -18 13.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "0";
				msToNext = "3000";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "-1 -17 4.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "1";
				msToNext = "1250";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "-1 -17 4.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "2";
				msToNext = "3000";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "0.25 -18 13.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "3";
				msToNext = "1500";
				smoothingType = "Accelerate";
			};
			new Marker() {
				position = "0.25 -18 13.75";
				rotation = "1 0 0 0";
				scale = "1 1 1";
				seqNum = "4";
				msToNext = "1";
				smoothingType = "Linear";
			};
		};
		new PathedInterior(MustChange) {
			position = "0 0 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "PathedDefault";
			interiorResource = $usermods @ "/data/interiors_pq/custom/ToTheFinish.dif";
			interiorIndex = "1";
			basePosition = "0 0 0";
			baseRotation = "1 0 0 0";
			baseScale = "1 1 1";
				initialScale = "1 1 1";
				initialTargetPosition = "-1";
				initialTransform = "0 0 0 1 0 0 0";
		};
	};
	new Trigger(Bounds) {
		position = "-40.30634 27.36179 -1.799999";
		rotation = "1 0 0 0";
		scale = "65 50 30";
		dataBlock = "InBoundsTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new TSStatic() {
		position = "-7.2 -22.25 -1.6";
		rotation = "1 0 0 0";
		scale = "30 0.25 12";
		shapeName = "~/data/shapes/colmesh.dts";
	};
};
}
//--- MISSION END ---
//--- SERVER POSTMISSION SCRIPTS BEGIN ---
//Put any scripts that will be loaded after the mission is loaded here

//--- SERVER POSTMISSION SCRIPTS END ---
