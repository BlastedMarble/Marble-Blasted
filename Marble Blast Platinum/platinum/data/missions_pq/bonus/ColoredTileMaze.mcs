//--- INFO BEGIN ---
//Mission information for the level select. Generated from the MissionInfo object except with extra goodies.
function PQ_ColoredTileMaze_GetMissionInfo() {
	return
new ScriptObject() {
		name = "Colored Tile Maze";
		type = "Bonus";
		level = "23";
		desc = "O, HEAVENS HAVE MERCY! THE HORRIBLE COLORED TILE MAZE!";
		artist = "HiGuy";
		music = "Upbeat Freedom.ogg";
		time = "70000";
		platinumTime = "60000";
		ultimateTime = "45000";
		awesomeTime = "27500";
		generalHint = "<font:Papyrus:18>JUST FOLLOW THE RULES, SIMPLE! I BELIEVE IN YOU!";
		ultimateHint = "<font:Papyrus:18>IF YOU KNOW THE RULES, JUST LEARN THE PATH! THAT SHOULDN\'T BE TOO HARD FOR SOMEONE SMART LIKE YOU!";
		awesomeHint = "<font:Consolas Bold:18>MAYBE JETS OF FIRE WILL HELP YOU FINISH FASTER. I\'LL GO CALL UP ALPHYS. SHE\'LL BE SURE TO KNOW WHERE TO FIND SOME.";
		customRadarRule = $Radar::Flags::None;
		alarmStartTime = "10";
		easterEgg = "0";
		gems = "0";
		interiors = "0";
		maxScore = "0";
		requirements = "Beat the Ultimate Time on Waves in the Dark.";
		tileMaze = "1";
		unlockFunc = "unlock_ColoredTileMaze";
		trivia = "<font:Comic Sans MS:22>i wonder what video game this level is based on"; //Not a typo
};
}
//--- INFO END ---
//--- UNLOCK BEGIN ---
function unlock_ColoredTileMaze(%mission) {
	return Unlock::getMissionCompletion(getMissionInfo("platinum/data/missions_pq/advanced/WavesInTheDark.mcs")) & $Completion::Ultimate;
}
//--- UNLOCK END ---
//Don't continue loading if this just wants the mission info
if ($loadingMissionInfo) return;
//--- CLIENT SCRIPTS BEGIN ---
//Put any scripts that will be loaded on all clients (in MP / SP) here.
// Note: these will be loaded by dedicated servers too, so be sure to test for
// $Server::Dedicated before creating any GUI.

//Source: Papyrus
//Red tiles are impassable! You cannot walk on them!
//Yellow tiles are electric! They will electrocute you!
//Green tiles are alarm tiles! If you step on them, you will have to fight a monster!
//Orange tiles are orange-scented. They will make you smell delicious!
//Blue tiles are water tiles! Swim through is you like, but, if you smell like oranges, the piranhas will bite you! Also, if a blue tile is next to a yellow tile, the water will also zap you!
//Purple tiles are slippery! You will slide to the next tile! However, the slippery soap smells like lemons, which piranhas do not like! Purple and blue are OK!
//Finally, pink tiles. They don't do anything. Step on them all you like.

//This took longer to write down than I'd like to admit.
$maze = Array("", "BGYKGPKYGRYKRGKOYRRORYKYYGGBYBOGGGRGGGR", "GOPBORRBYRRBBBRRRKKROKGRPOBOPPKBRGRGRGR", "KRKKBBRORKBPRKYGPOPYPPRRKOBPPBYKRGRGRGR", "GYBYRKGOPPOKROKORBBKOBGOKBPOYBKKGGGGRGG");

$map["B"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileB.dif"; //Blue - circles_blue
$map["G"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileG.dif"; //Green - circles_green
$map["Y"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileY.dif"; //Yellow - circles_yellow
$map["K"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileK.dif"; //Pink - hot5
$map["P"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileP.dif"; //Purple - circles_purple
$map["R"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileR.dif"; //Red - circles_red
$map["O"] = $usermods @ "/data/interiors_pq/bonus/tilemaze/tileO.dif"; //Orange - circles_orange

function getColor(%xy) {
	if (getWord(%xy, 0) < 0 || getWord(%xy, 1) < 0 ||
		getWord(%xy, 0) > 3 || getWord(%xy, 1) > 39)
		return "";

	return getSubStr($maze.getEntry(getWord(%xy, 0)), getWord(%xy, 1), 1);
}

$STEP_GOOD = 0;
$STEP_RED = 1;
$STEP_SHOCK = 2;
$STEP_PIRANHA = 3;

function canStep(%xy) {
	//No stepping off the path, Regis
	if (getWord(%xy, 0) < 0 || getWord(%xy, 1) < 0 || 
		getWord(%xy, 0) > 3 || getWord(%xy, 1) > 39)
		return $STEP_RED;

	%col = getColor(%xy);
	%px = getColor(VectorAdd(%xy, "1 0 0"));
	%py = getColor(VectorAdd(%xy, "0 1 0"));
	%nx = getColor(VectorAdd(%xy, "-1 0 0"));
	%ny = getColor(VectorAdd(%xy, "0 -1 0"));

	if (%col $= "R") {
		//Can't step on red
		return $STEP_RED;
	}
	if (%col $= "Y") {
		//Can't step on yellow
		return $STEP_SHOCK;
	}
	if (%col $= "B" && $SMELL $= "O") {
		//Can't step on blue if smelling like oranges
		return $STEP_PIRANHA;
	}
	if (%col $= "B" && (
			%px $= "Y" ||
			%py $= "Y" ||
			%nx $= "Y" ||
			%ny $= "Y"
		)) {
		//Can't step on blue if any surrounding tile is a yellow
		return $STEP_SHOCK;
	}
	return $STEP_GOOD;
}

function toTile(%xy) {
	return strReplace(mRound(getWord(%xy, 0) / 4) SPC mRound(getWord(%xy, 1) / 4) SPC 0, "-0", "0");
}

function tileMaze() {
	cancel($tileMaze);
	if (!MissionInfo.tileMaze)
		return;
	$tileMaze = schedule(10, 0, "tileMaze");
	
	if (!isObject($MP::MyMarble))
		return;

	%pos = toTile($MP::MyMarble.getPosition());
	%col = getColor(%pos);

	if (%pos !$= $LAST_POS) {
		%delta = VectorSub(%pos, $LAST_POS);
		//Make sure you don't Regislian (go diagonally) through the tiles
		// also that you can go there. That's a good thing to check too
		if (VectorLen(%delta) == 1 && canStep(%pos) == $STEP_GOOD) {
			$LAST_POS = %pos;

			if (%col $= "O") {
				//Orange makes you smell orangey
				$SMELL = "O";
				commandToServer('UpdateMarble', "platinum/data/shapes_pq/Marbles/Fruit/Mandarin.dts" TAB "base" TAB true);
			}
			if (%col $= "P") {
				$SMELL = "L";
				commandToServer('UpdateMarble', "platinum/data/shapes_pq/Marbles/PQ Classic/ball-superball.dts" TAB "mellowYellow" TAB true);

				//Purple makes you lemonny and slide to the next
				Physics::pushLayerName("purpleFloor");
				$MP::MyMarble.setVelocity(VectorScale(%delta, 7.5));
			} else {
				//Off purple, stop sliding
				Physics::popLayerName("purpleFloor");
			}
			if (%col $= "G") {
				//Green tiles flash the screen (can't find the SFX plus I don't like stealing)
				//Have to use the server marble for this apparently
				LocalClientConnection.player.setWhiteOut(0.2);
			}
		} else {
			//Can't step on this tile. Go back.
			%vel = $MP::MyMarble.getVelocity();
			%proj = VectorProj(%vel, %delta);

			if (VectorAngle(%proj, %delta) > 1) {
				//Already going backwards? Have a push.
				%imp = VectorNormalize(VectorScale(%proj, -1));
				$MP::MyMarble.applyImpulse("0 0 0", VectorScale(%imp, 0.1));
			} else {
				//Send you right back where you came
				$MP::MyMarble.setVelocity(VectorScale(VectorAdd(%proj, %delta), -1));
			}
		}
	}
}

Physics::registerLayer("purpleFloor",
	"airAcceleration 0" NL
	"angularAcceleration 0" NL
	"jumpImpulse 0" NL
	"brakingAcceleration 0" NL
	"bounceRestitution 0" NL
	"staticFriction 0" NL
	"kineticFriction 0" NL
	"bounceKineticFriction 0"
);

function clientCbOnRespawn() {
	startMaze();
}
function clientCbOnMissionLoaded() {
	startMaze();
}
function clientCbOnMissionReset() {
	startMaze();
}

function startMaze() {
	$SMELL = "L";
	$LAST_POS = "2 0 0";
	commandToServer('UpdateMarble', MarbleSelectDlg.getSelection());

	tileMaze();

	//Shaders murder your FPS on this mission
	disableShaders();
}

//--- CLIENT SCRIPTS END ---
//Don't continue loading if this is a client (non-server)
if (!$Server::Hosting || $Server::_Dedicated) return;
//--- SERVER PREMISSION SCRIPTS BEGIN ---
//These scripts will be loaded by the server only, before the mission is created.
// This is a great place to put custom datablocks.

//--- SERVER PREMISSION SCRIPTS END ---
//--- MISSION BEGIN ---
function PQ_ColoredTileMaze_LoadMission() {
	return
new SimGroup(MissionGroup) {

	new SimGroup(MissionData) {

		new MissionArea(MissionArea) {
			area = "-360 -648 720 1296";
			flightCeiling = "300";
			flightCeilingRange = "20";
				locked = "true";
		};
		new Sky(Sky) {
			position = "336 136 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			cloudHeightPer[0] = "0";
			cloudHeightPer[1] = "0";
			cloudHeightPer[2] = "0";
			cloudSpeed1 = "0.0001";
			cloudSpeed2 = "0.0002";
			cloudSpeed3 = "0.0003";
			visibleDistance = "500";
			useSkyTextures = "1";
			renderBottomTexture = "1";
			SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
			fogDistance = "300";
			fogColor = "0.600000 0.600000 0.600000 1.000000";
			fogVolume1 = "-1 7.45949e-31 1.3684e-38";
			fogVolume2 = "-1 1.07208e-14 8.756e-14";
			fogVolume3 = "-1 5.1012e-10 2.05098e-08";
			materialList = "~/data/skies_pq/Blender4/blender4.dml";
			windVelocity = "1 0 0";
			windEffectPrecipitation = "0";
			noRenderBans = "1";
			fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
			fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
			fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
		};
	};
	new SimGroup(HelpBubbleGroup) {

		new StaticShape(OfCourseYouUnderstand) {
			position = "8 0 3";
			rotation = "1 0 0 0";
			scale = "0 0 0";
			dataBlock = "HelpBubble";
				disable = "0";
				displayonce = "0";
				extended = "1";
				persistTime = "3500";
				rotate = "1";
				text = "<font:Papyrus:18>RED TILES ARE IMPASSABLE! YOU CANNOT WALK ON THEM!\nYELLOW TILES ARE ELECTRIC! THEY WILL ELECTROCUTE YOU!\nGREEN TILES ARE ALARM TILES! IF YOU STEP ON THEM, YOU WILL HAVE TO FIGHT A MONSTER!\nORANGE TILES ARE ORANGE-SCENTED. THEY WILL MAKE YOU SMELL DELICIOUS!\nBLUE TILES ARE WATER TILES! SWIM THROUGH IF YOU LIKE, BUT, IF YOU SMELL LIKE ORANGES, THE PIRANHAS WILL BITE YOU! ALSO, IF A BLUE TILE IS NEXT TO A YELLOW TILE, THE WATER WILL ALSO ZAP YOU!\nPURPLE TILES ARE SLIPPERY! YOU WILL SLIDE TO THE NEXT TILE! HOWEVER, THE SLIPPERY SOAP SMELLS LIKE LEMONS, WHICH PIRANHAS DO NOT LIKE! PURPLE AND BLUE ARE OK!\nFINALLY, PINK TILES. THEY DON\'T DO ANYTHING. STEP ON THEM ALL YOU LIKE.";
				time = "0";
				triggerRadius = "1";
		};
	};
	new SimGroup(PathNodeGroup) {

		new StaticShape(CameraPath1) {
			position = "7.499579 12.17575 13.05983";
			rotation = "0.5717957 0.5713412 -0.5887437 118.9856";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath2";
				timeToNext = "15000";
				Smooth = "1";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath2) {
			position = "6.743359 139.1758 13.06652";
			rotation = "0.5717957 0.5713412 -0.5887437 118.9856";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath1";
				timeToNext = "15000";
				Smooth = "1";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
	};
	new Trigger(Bounds) {
		position = "-19.45756 -29.41062 -5.596437";
		rotation = "1 0 0 0";
		scale = "38.91512 200 56.80449";
		dataBlock = "InBoundsTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Sun() {
		direction = "0.638261 0.459006 -0.61801";
		color = "1.400000 1.200000 0.400000 1.000000";
		ambient = "0.300000 0.300000 0.400000 1.000000";
	};
	new StaticShape(StartPoint) {
		position = "8 0 0";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		dataBlock = "StartPad";
	};
	new StaticShape(EndPoint) {
		position = "12 152 0";
		rotation = "1 0 0 0";
		scale = "1 1 1";
		dataBlock = "EndPad";
	};
};
}
//--- MISSION END ---
//--- SERVER POSTMISSION SCRIPTS BEGIN ---

function makeTile(%color, %x, %y) {
	%tile = new InteriorInstance() {
		position = (%x * 4) SPC (%y * 4) SPC 0;
		rotation = "1 0 0 0";
		scale = "1 1 1";
      interiorFile = $map[%color];
      showTerrainInside = "0";
	};

	MissionCleanup.add(%tile);
}

function genTileMaze() {
	for (%x = 0; %x < $maze.getSize(); %x ++) {
		%entry = $maze.getEntry(%x);
		for (%y = 0; %y < strlen(%entry); %y ++) {
			makeTile(getSubStr(%entry, %y, 1), %x, %y);
		}
	}
}

genTileMaze();

//--- SERVER POSTMISSION SCRIPTS END ---
