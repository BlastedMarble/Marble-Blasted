//--- INFO BEGIN ---
//Mission information for the level select. Generated from the MissionInfo object except with extra goodies.
function LB_PQ_Puzzle02IcyPath_GetMissionInfo() {
	return
new ScriptObject() {
		name = "Puzzle 2 - Icy Path";
		type = "Bonus";
		level = "6";
		desc = "Find the quickest way around.";
		startHelpText = "Nothing to stop you falling off.\nWatch your speed!";
		artist = "Matan";
		music = "Maze.ogg";
		game = "PlatinumQuest";
		time = "105000";
		platinumTime = "70000";
		ultimateTime = "40000";
		awesomeTime = "13750";
		generalHint = "Path is rather simple and linear, but you will have to backtrack. Go backwards as soon as you\'re on dry land, or else you will fall out of bounds. Using diagonal movement to slow down will be of greater help.";
		ultimateHint = "Go fast, nothing else to it.";
		awesomeHint = "Diagonal usage and a few shortcuts can really help out.";
		customRadarRule = $Radar::Flags::Gems | $Radar::Flags::EndPad;
		easterEgg = "0";
		gems = "4";
		interior0 = $usermods @ "/data/lbinteriors_pq/bonus/Puzzle02IcyPath.dif";
		interiors = "1";
		maxScore = "4";
		requirements = "Finish Puzzle 1 - Welcome Lap.";
		unlockFunc = "unlock_LB_Puzzle02IcyPath";
		trivia = "The first level created for the Puzzle series. Heavily inspired from watching a speedrun for Kula World, Matan took this level and made it in Marble Blast.";
};
}
//--- INFO END ---
//--- UNLOCK BEGIN ---
function unlock_LB_Puzzle02IcyPath(%mission) {
	return Unlock::hasBeatMissionPar(getMissionInfo($usermods @ "/data/lbmissions_pq/bonus/Puzzle01WelcomeLap.mcs"));
}
//--- UNLOCK END ---
//Don't continue loading if this just wants the mission info
if ($loadingMissionInfo) return;
//--- CLIENT SCRIPTS BEGIN ---
//Put any scripts that will be loaded on all clients (in MP / SP) here.
// Note: these will be loaded by dedicated servers too, so be sure to test for
// $Server::Dedicated before creating any GUI.

//--- CLIENT SCRIPTS END ---
//Don't continue loading if this is a client (non-server)
if (!$Server::Hosting || $Server::_Dedicated) return;
//--- SERVER PREMISSION SCRIPTS BEGIN ---
//These scripts will be loaded by the server only, before the mission is created.
// This is a great place to put custom datablocks.

//--- SERVER PREMISSION SCRIPTS END ---
//--- MISSION BEGIN ---
function LB_PQ_Puzzle02IcyPath_LoadMission() {
	return
new SimGroup(MissionGroup) {

	new SimGroup(MissionData) {

		new MissionArea(MissionArea) {
			area = "-360 -648 720 1296";
			flightCeiling = "300";
			flightCeilingRange = "20";
				locked = "true";
		};
		new Sky(Sky) {
			position = "336 136 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			cloudHeightPer[0] = "0";
			cloudHeightPer[1] = "0";
			cloudHeightPer[2] = "0";
			cloudSpeed1 = "0.0001";
			cloudSpeed2 = "0.0002";
			cloudSpeed3 = "0.0003";
			visibleDistance = "500";
			useSkyTextures = "1";
			renderBottomTexture = "1";
			SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
			fogDistance = "300";
			fogColor = "0.600000 0.600000 0.600000 1.000000";
			fogVolume1 = "-1 7.45949e-31 1.3684e-38";
			fogVolume2 = "-1 1.07208e-14 8.756e-14";
			fogVolume3 = "-1 5.1012e-10 2.05098e-08";
			materialList = "~/data/skies_pq/Blender4/blender4.dml";
			windVelocity = "1 0 0";
			windEffectPrecipitation = "0";
			noRenderBans = "1";
			fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
			fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
			fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
		};
		new Sun() {
			direction = "0.638261 0.459006 -0.61801";
			color = "0.750000 0.900000 1.000000 1.000000";
			ambient = "0.300000 0.300000 0.400000 1.000000";
		};
	};
	new SimGroup(InteriorGroup) {

		new InteriorInstance() {
			position = "0 0 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			interiorFile = "~/data/lbinteriors_pq/bonus/Puzzle02IcyPath.dif";
			showTerrainInside = "0";
		};
	};
	new Trigger(StayHere) {
		position = "-6 17 -3";
		rotation = "1 0 0 0";
		scale = "40 35 14";
		dataBlock = "InBoundsTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "-3.75 12 2";
		rotation = "1 0 0 0";
		scale = "3.5 7.75 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "8.25 12 2";
		rotation = "1 0 0 0";
		scale = "3.5 23.75 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "20.25 12 2";
		rotation = "1 0 0 0";
		scale = "3.5 23.75 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "-3.75 -0.25 2";
		rotation = "1 0 0 0";
		scale = "3.5 11.5 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "0.25 -12.25 2";
		rotation = "1 0 0 0";
		scale = "7.5 3.5 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "12.25 12 6.25";
		rotation = "1 0 0 0";
		scale = "7.5 4 3.5";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "-3.75 12 6.25";
		rotation = "1 0 0 0";
		scale = "11.5 4 3.5";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "24.25 -12.25 2";
		rotation = "1 0 0 0";
		scale = "8 4 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new Trigger() {
		position = "28.25 0 2";
		rotation = "1 0 0 0";
		scale = "3.5 12 4";
		dataBlock = "NoMovementKeysTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
	new SimGroup(ItemGroup) {

		new Item() {
			position = "10 -6 2.425";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "TimeTravelItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				timeBonus = "500";
		};
		new Item() {
			position = "16 2 2.425";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "TimeTravelItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				timeBonus = "500";
		};
		new Item() {
			position = "22 -6 2.425";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "TimeTravelItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				timeBonus = "500";
		};
		new Item() {
			position = "22 11.57511 8";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "TimeTravelItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				timeBonus = "1000";
		};
		new Item() {
			position = "-2 11.5 8";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "TimeTravelItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				timeBonus = "5000";
		};
		new Item() {
			position = "30 -14 2.425";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "TimeTravelItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				timeBonus = "7500";
		};
		new Item() {
			position = "-1 11.25 4.5";
			rotation = "1 0 0 180";
			scale = "1 1 1";
			dataBlock = "AntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "11 11.25 4.5";
			rotation = "1 0 0 180";
			scale = "1 1 1";
			dataBlock = "AntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "23 11.25 4.5";
			rotation = "1 0 0 180";
			scale = "1 1 1";
			dataBlock = "AntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-3 10.75 4.15";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "AntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "9 10.75 4.15";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "AntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "21 10.75 4.15";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "AntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new StaticShape(StartPoint) {
			position = "-2 2 2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "StartPad_PQ";
		};
		new StaticShape(EndPoint) {
			position = "30 2 2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "EndPad_PQ";
		};
		new Item() {
			position = "-2 -14 2";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "FancyGemItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "10 11.95 8";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "FancyGemItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "22 -14 2";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "FancyGemItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6 2 2";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			dataBlock = "FancyGemItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new StaticShape() {
			position = "30.5609 1.1547 7.14211";
			rotation = "-0.0391477 -0.204073 0.978173 92.4906";
			scale = "1.5 1.5 1.5";
			dataBlock = "regularfinishlinesign";
		};
	};
	new SimGroup(PathNodeGroup) {

		new StaticShape(CameraPath1) {
			position = "11.34946 -4.808926 5.70236";
			rotation = "0.4802408 0.161336 -0.8621714 42.57709";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath2";
				timeToNext = "3000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath2) {
			position = "19.53879 -10.83411 10.01655";
			rotation = "0.5568991 0.2153417 -0.8021792 51.47155";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath3";
				timeToNext = "4000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath3) {
			position = "30.15807 -17.75446 19.84822";
			rotation = "0.6504202 0.2760491 -0.7076373 61.90777";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath4";
				timeToNext = "2750";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath4) {
			position = "36.50376 -21.9966 27.26964";
			rotation = "0.6550537 0.2955283 -0.6953903 65.94892";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath5";
				timeToNext = "5000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath5) {
			position = "36.50376 -21.9966 27.26964";
			rotation = "0.6550537 0.2955283 -0.6953903 65.94892";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath1";
				timeToNext = "0";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
	};
};
}
//--- MISSION END ---
//--- SERVER POSTMISSION SCRIPTS BEGIN ---
//Put any scripts that will be loaded after the mission is loaded here

//--- SERVER POSTMISSION SCRIPTS END ---
